// Use 1920px screen as baseline and scale down when needed

@import "./variables.scss";

@font-face {
  font-family: Roboto;
  src: url("./Roboto-Normal.ttf"), url("./Roboto-Medium.ttf") url("./Roboto-Bold.ttf");
}

* {
  font-family: Roboto, sans-serif;
}

/*
 * Since we have a very weird scale of resolutions to support, from very narrow and tall
 * to very "flat" and wide. Relative font sizes to the viewport broke down in these edge
 * cases, hence there are 2 rules: body font size, which is the basis for everything and
 * scales the font when width decreases; and main element font-size which scales the 
 * font when height changes. The different em font sizes scale the component font sizes 
 * relative to these two aforementioned baselines.
 */

body {
  font-size: 20px;
  @for $i from 1 through 5 {
    @media all and (max-width: 1200px - $i * 200px) {
      font-size: 20px - $i * 0.7px;
    }
  }
}

#app {
  color: white;
  font-weight: 300;
  font-size: 100%;

  @for $i from 1 through 5 {
    @media all and (max-height: 900px - $i * 150px) {
      font-size: 100% - $i * 3;
    }
  }
}

.text {
  font-size: 1rem;
}

.text--very-large {
  font-size: 1.6rem;
}

.text--large {
  font-size: 1.2rem;
}

.text--smaller {
  font-size: 0.85rem;
}

.text--small {
  font-size: 0.8rem;
}

.text--very-small {
  font-size: 0.7rem;
}

.text--medium {
  font-weight: 600;
}

.text--bold {
  font-weight: 700;
}

.text--center {
  text-align: center;
}

.text--opaque {
  opacity: 0.7;
}

.text--title {
  font-size: 1rem;
  font-weight: 600;
  color: $color-lightgray;
  // line-height: 1.2em;
  padding-bottom: 2px;
}

.text--subtitle {
  font-size: 0.9rem;
  color: $color-gray;
  // line-height: 1.2em;
  padding-bottom: 2px;
}

.text--subtitle-upper {
  font-size: 0.75rem;
  letter-spacing: 2px;
  text-transform: uppercase;
  color: $color-lightgray;
}